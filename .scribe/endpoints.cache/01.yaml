## Autogenerated by Scribe. DO NOT MODIFY.

name: User
description: |-

  APIs for managing Users
endpoints:
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: User
      groupDescription: |-

        APIs for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Đăng ký users'
      description: 'Kết quả trả về file json user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer <token>'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: Trung
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: admin@gmail.com
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: 'h6U^#66)iM/oWg$b'
        type: string
        custom: []
    cleanBodyParameters:
      name: Trung
      email: admin@gmail.com
      password: 'h6U^#66)iM/oWg$b'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "data": {
            "id": 1,
            "name": "Trung",
            "email": "admin@gmail.com",
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DagvbZ3E68e5hacf4dPk1V6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: User
      groupDescription: |-

        APIs for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: Login
      description: 'This endpoint is used to login a user to the system.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer <token>'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: ian@gmail.com
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '12345678'
        type: string
        custom: []
    cleanBodyParameters:
      email: ian@gmail.com
      password: '12345678'
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "User Login Successfully",
          "access_token": "8|MgowQLkdpShwrb8AI9j1YAGmwnDjAOeE17XrP5nb",
          "token_type": "Bearer"
          }
        headers: []
        description: 'Successful Login'
        custom: []
      -
        status: 401
        content: |-
          {
          "message": "Invalid login credentials"

          }
        headers: []
        description: 'Failed Login'
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V5a6e6dPgk384hbvaDEZ1cf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      groupName: User
      groupDescription: |-

        APIs for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer <token>'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ak66c5fVE3hP8begdZ41aDv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      groupName: User
      groupDescription: |-

        APIs for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Show 1 user'
      description: 'Kết quả trả về file json user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer <token>'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: dolores
        type: string
        custom: []
    cleanUrlParameters:
      id: dolores
    queryParameters:
      id:
        name: id
        description: ''
        required: true
        example: 1
        type: integer
        custom: []
    cleanQueryParameters:
      id: 1
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "data": {
            "id": 1,
            "name": "Trung",
            "email": "admin@gmail.com",
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dZ8g1D5V63ahfEcveP6a4bk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      groupName: User
      groupDescription: |-

        APIs for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'Create users'
      description: 'Kết quả trả về file json user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer <token>'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: Trung
        type: string
        custom: []
      email:
        name: email
        description: ''
        required: true
        example: admin@gmail.com
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: '{!U\{Z`_''?(4qWk6'
        type: string
        custom: []
    cleanBodyParameters:
      name: Trung
      email: admin@gmail.com
      password: '{!U\{Z`_''?(4qWk6'
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "data": {
            "id": 1,
            "name": "Trung",
            "email": "admin@gmail.com",
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Egb58P61dZVakcD4eh36fva'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/users/{id}'
    metadata:
      groupName: User
      groupDescription: |-

        APIs for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: 'update user'
      description: 'Kết quả trả về file json user'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer <token>'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: nam
        type: string
        custom: []
    cleanUrlParameters:
      id: nam
    queryParameters:
      id:
        name: id
        description: 'Example :1'
        required: true
        example: minus
        type: string
        custom: []
    cleanQueryParameters:
      id: minus
    bodyParameters:
      name:
        name: name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: pvtabjyvyhfczaawyxduzfhy
        type: string
        custom: []
      email:
        name: email
        description: admin1@gmail.com
        required: false
        example: neha51@example.net
        type: 'Example:'
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: rerum
        type: string
        custom: []
    cleanBodyParameters:
      name: pvtabjyvyhfczaawyxduzfhy
      email: neha51@example.net
      password: rerum
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "data": {
            "id": 1,
            "name": "Trung",
            "email": "admin1@gmail.com",
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h6D3avgkZfPde8a16Vc54Eb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      groupName: User
      groupDescription: |-

        APIs for managing Users
      subgroup: ''
      subgroupDescription: ''
      title: |-
        Delete user
        Trả về message
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer <token>'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: et
        type: string
        custom: []
    cleanUrlParameters:
      id: et
    queryParameters:
      id:
        name: id
        description: 'Example :1'
        required: false
        example: 18
        type: integer
        custom: []
    cleanQueryParameters:
      id: 18
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message : OK"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D1Ef5abZPvdg43Vcka66eh8'
    controller: null
    method: null
    route: null
    custom: []
